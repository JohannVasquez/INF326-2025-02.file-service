[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "filesvc"
version = "0.1.0"
description = "Servicio de Archivos para Chat Universitario"
authors = [
    {name = "Grupo 7", email = "grupo7@universidad.edu"},
]
readme = "README.md"
requires-python = ">=3.13"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
]

dependencies = [
    # FastAPI core (versiones exactas de tu requirements.txt)
    "fastapi==0.118.0",
    "uvicorn==0.37.0",
    "starlette==0.48.0",
    
    # Configuration and validation (versiones exactas)
    "pydantic==2.11.10",
    "pydantic-core==2.33.2",
    "pydantic-settings>=2.1.0",
    
    # File handling (versiones exactas)
    "python-multipart==0.0.20",
    "python-dotenv==1.1.1",
    
    # HTTP client (versiÃ³n exacta)
    "httpx==0.28.1",
    
    # Utilities que ya tienes
    "typing_extensions==4.15.0",
    "anyio==4.11.0",
    "sniffio==1.3.1",
    "idna==3.10",
    "certifi==2025.10.5",
    "urllib3==2.5.0",
    "click==8.3.0",
    
    # ===== DEPENDENCIAS ADICIONALES PARA EL SERVICIO DE ARCHIVOS =====
    
    # Database
    "sqlalchemy[asyncio]>=2.0.0",
    "asyncpg>=0.29.0",
    "alembic>=1.13.0",
    
    # File handling adicional
    "aiofiles>=23.2.0",
    
    # Storage (S3 compatible)
    "boto3>=1.34.0",
    "botocore>=1.34.0",
    
    # Security
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    
    # Logging estructurado
    "structlog>=23.2.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.25.0",  # For testing async clients
    
    # Code quality
    "ruff>=0.1.0",
    "black>=23.0.0",
    "mypy>=1.7.0",
    
    # Type stubs
    "types-aiofiles",
    "types-python-jose",
    "types-passlib",
]

[tool.black]
line-length = 88
target-version = ['py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  migrations
)/
'''

[tool.ruff]
target-version = "py313"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = []
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "migrations",
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["E501"]

[tool.mypy]
python_version = "3.13"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true
show_error_codes = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "-ra",
]
markers = [
    "unit: Unit tests",
    "e2e: End-to-end tests",
    "slow: Slow tests",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["app"]
omit = [
    "tests/*",
    "migrations/*",
    "*/venv/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if TYPE_CHECKING:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]